{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortByAlph","setState","ALPHABET","sortByLen","LENGTH","getByDefault","reverse","this","visibleGoods","goods","sort","a","b","localeCompare","length","getReorderedGoods","isReset","className","type","cn","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,gHAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAsDE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,WAAa,WACX,EAAKC,SAAS,CACZH,SAAUL,EAASS,YARzB,EAYEC,UAAY,WACV,EAAKF,SAAS,CACZH,SAAUL,EAASW,UAdzB,EAkBEC,aAAe,WACb,EAAKJ,SAAS,CACZH,SAAUL,EAASM,KACnBF,YAAY,KArBlB,EAyBES,QAAU,WACR,EAAKL,UAAS,SAACL,GAAD,MAAY,CACxBC,YAAaD,EAAMC,gBA3BzB,4CA+BE,WACE,MAAiCU,KAAKX,MAA9BE,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,WACZW,EA5EH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAENW,EAAY,YAAOC,GA8BzB,OA1BAD,EAAaE,MAAK,SAACC,EAAGC,GACpB,OAAQd,GACN,KAAKL,EAASS,SACZ,OAAOS,EAAEE,cAAcD,GACzB,KAAKnB,EAASW,OACZ,OAAOO,EAAEG,OAASF,EAAEE,OACtB,QACE,OAAO,MAeTjB,GACFW,EAAaF,UAGRE,EA0CgBO,CAAkBrB,EAAD,eAAuBa,KAAKX,QAC5DoB,EAAUlB,IAAaL,EAASM,MAAQF,EAE9C,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBACZ,CAAE,WAAYrB,IAAaL,EAASS,WACtCkB,QAASb,KAAKP,WAJhB,iCASA,wBACEkB,KAAK,SACLD,UAAWE,IAAG,oBACZ,CAAE,WAAYrB,IAAaL,EAASW,SACtCgB,QAASb,KAAKJ,UAJhB,4BAUA,wBACEe,KAAK,SACLD,UAAWE,IAAG,oBACZ,CAAE,YAAatB,IACjBuB,QAASb,KAAKD,QAJhB,qBAUEU,GACA,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAASb,KAAKF,aAHhB,sBAYJ,6BACE,6BACGG,EAAaa,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,iBApFtC,GAAyBC,IAAMC,WCrE/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cce65792.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  'NONE',\n  'ALPHABET',\n  'LENGTH',\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  // HOW BETTER CODED SORTING DIFFERENT TYPE DATA??? FIRST OR SECOND EXAMPLE???\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return a.localeCompare(b);\n      case SortType.LENGTH:\n        return a.length - b.length;\n      default:\n        return 0;\n    }\n  });\n\n  // switch (sortType) {\n  //   case SortType.ALPHABET:\n  //     visibleGoods.sort((a, b) => a.localeCompare(b));\n  //     break;\n  //   case SortType.LENGTH:\n  //     visibleGoods.sort((a, b) => a.length - b.length);\n  //     break;\n  //   default:\n  //     break;\n  // }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortByAlph = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  sortByLen = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  getByDefault = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  reverse = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const visibleGoods = getReorderedGoods(goodsFromServer, { ...this.state });\n    const isReset = sortType !== SortType.NONE || isReversed;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={cn('button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET })}\n            onClick={this.sortByAlph}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn('button is-success',\n              { 'is-light': sortType !== SortType.LENGTH })}\n            onClick={this.sortByLen}\n\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn('button is-warning',\n              { 'is-light': !isReversed })}\n            onClick={this.reverse}\n\n          >\n            Reverse\n          </button>\n\n          { isReset && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.getByDefault}\n\n            >\n              Reset\n            </button>\n          ) }\n\n        </div>\n\n        <ul>\n          <ul>\n            {visibleGoods.map(good => (\n              <li data-cy=\"Good\" key={good}>\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}